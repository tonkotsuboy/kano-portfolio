{
  "root": true,
  "extends": [
    "next/core-web-vitals",
    "prettier"
  ],
  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:@typescript-eslint/strict",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "plugin:typescript-sort-keys/recommended"
      ],
      "parserOptions": {
        "sourceType": "module",
        "project": "./tsconfig.json"
      },
      "rules": {
        "array-callback-return": "error",
        "no-param-reassign": "error",
        "lines-between-class-members": ["error", "always"],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": ["variable", "parameter", "classProperty"],
            "custom": {
              "regex": "[A-Za-z_]*(?<!_)",
              "match": true
            },
            "format": null,
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "variable",
            "types": ["boolean"],
            "format": ["PascalCase"],
            "prefix": ["is", "should", "can"]
          },
          {
            "selector": ["function", "method"],
            "format": ["camelCase", "PascalCase"],
            "leadingUnderscore": "forbid",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": ["typeLike"],
            "format": ["PascalCase"],
            "leadingUnderscore": "forbid",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": ["typeProperty", "objectLiteralProperty"],
            "format": null
          },
          {
            "selector": ["default"],
            "format": ["camelCase"],
            "leadingUnderscore": "forbid",
            "trailingUnderscore": "forbid"
          }
        ],
        "@typescript-eslint/array-type": "error",
        "@typescript-eslint/consistent-type-definitions": ["error", "type"],
        "@typescript-eslint/no-base-to-string": "error",
        "@typescript-eslint/no-confusing-non-null-assertion": "error",
        "@typescript-eslint/no-dynamic-delete": "error",
        "@typescript-eslint/no-invalid-void-type": "error",
        "@typescript-eslint/no-meaningless-void-operator": "error",
        "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
        "@typescript-eslint/no-unnecessary-condition": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-includes": "error",
        "@typescript-eslint/prefer-literal-enum-member": "error",
        "@typescript-eslint/prefer-nullish-coalescing": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/prefer-reduce-type-parameter": "error",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        "@typescript-eslint/prefer-ts-expect-error": "error",
        "@typescript-eslint/no-use-before-define": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/explicit-module-boundary-types": "error",
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/no-unused-vars": [
          "error",
          { "ignoreRestSiblings": true }
        ],
        "@typescript-eslint/no-misused-promises": [
          "error",
          { "checksVoidReturn": false }
        ],
        "@typescript-eslint/consistent-type-exports": "error",
        "@typescript-eslint/consistent-type-imports": "error",
        "react/jsx-curly-brace-presence": "error"
      }
    },
    {
      "files": ["**/*.test.ts", "**/*.test.tsx"],
      "plugins": ["jest", "testing-library"],
      "extends": [
        "plugin:jest/recommended",
        "plugin:jest/style",
        "plugin:testing-library/react"
      ],
      "rules": {
        "@typescript-eslint/no-unsafe-argument": "warn",
        "jest/consistent-test-it": ["error", { "fn": "test" }],
        "jest/no-alias-methods": "off",
        "jest/prefer-called-with": "error",
        "jest/no-duplicate-hooks": "error",
        "jest/prefer-expect-resolves": "error",
        "jest/prefer-spy-on": "error",
        "jest/prefer-hooks-in-order": "error",
        "jest/prefer-strict-equal": "error",
        "jest/prefer-todo": "error",
        "jest/valid-title": "error",
        "testing-library/no-render-in-setup": "off"
      }
    }
  ]
}
