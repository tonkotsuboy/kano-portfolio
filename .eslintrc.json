{
  "root": true,
  "plugins": [
    "react",
    "import",
    "es"
  ],
  "extends": [
    "next/core-web-vitals",
    "prettier",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:@typescript-eslint/strict",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:react/recommended",
    "plugin:typescript-sort-keys/recommended",
    "plugin:jest/recommended",
    "plugin:jest/style",
    "plugin:testing-library/react"
  ],
  "parserOptions": {
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "rules": {
    "array-bracket-spacing": [
      "error",
      "never"
    ],
    "array-callback-return": "error",
    "arrow-spacing": "error",
    "comma-dangle": [
      "error",
      "always-multiline"
    ],
    "comma-spacing": "error",
    "comma-style": [
      "error",
      "last"
    ],
    "curly": [
      "error",
      "all"
    ],
    "eol-last": "error",
    "jsx-quotes": [
      "error",
      "prefer-double"
    ],
    "func-call-spacing": ["error", "never"],
    "indent": [
      "error",
      2
    ],
    "key-spacing": [
      "error",
      {
        "beforeColon": false ,
        "afterColon": true
      }
    ],
    "keyword-spacing": "error",
    "linebreak-style": [
      "error",
      "unix"
    ],
    "lines-between-class-members": [
      "error",
      "always"
    ],
    "max-depth": [
      "error",
      4
    ],
    "no-else-return": "error",
    "no-multi-spaces": "error",
    "no-param-reassign": "error",
    "no-unused-vars": "error",
    "no-prototype-builtins": "error",
    "radix": [
      "error",
      "always"
    ],
    "quotes": [
      "error",
      "double",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ],
    "semi": [
      "error",
      "always"
    ],

    "no-lonely-if": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1,
        "maxBOF": 0,
        "maxEOF": 0
      }
    ],
    "no-tabs": "error",
    "no-trailing-spaces": [
      "error",
      {
        "skipBlankLines": true
      }
    ],
    "no-whitespace-before-property": "error",
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "semi-spacing": "error",
    "space-before-blocks": "error",
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "never",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "space-in-parens": [
      "error",
      "never"
    ],
    "space-infix-ops": "error",
    "prefer-const": "error",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "template-curly-spacing": [
      "error",
      "never"
    ],
    "sort-imports": [
      "error",
      {
        "ignoreCase": true,
        "ignoreDeclarationSort": true
      }
    ],
    "es/no-regexp-lookbehind-assertions": "error",
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/no-useless-path-segments": "error",
    "import/order": [
      "error",
      {
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index",
          "object",
          "type"
        ],
        "newlines-between": "always"
      }
    ],
    "@typescript-eslint/array-type": "error",
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/consistent-type-definitions": [
      "error",
      "type"
    ],
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": [
          "variable",
          "parameter",
          "classProperty"
        ],
        "custom": {
          "regex": "[A-Za-z_]*(?<!_)",
          "match": true
        },
        "format": null,
        "trailingUnderscore": "forbid"
      },
      {
        "selector": "variable",
        "types": [
          "boolean"
        ],
        "format": [
          "PascalCase"
        ],
        "prefix": [
          "is",
          "should",
          "can"
        ]
      },
      {
        "selector": [
          "function",
          "method"
        ],
        "format": [
          "camelCase",
          "PascalCase"
        ],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": [
          "typeLike"
        ],
        "format": [
          "PascalCase"
        ],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": [
          "typeProperty",
          "objectLiteralProperty"
        ],
        "format": null
      },
      {
        "selector": [
          "default"
        ],
        "format": [
          "camelCase"
        ],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-confusing-non-null-assertion": "error",
    "@typescript-eslint/no-dynamic-delete": "error",
    "@typescript-eslint/no-invalid-void-type": "error",
    "@typescript-eslint/no-meaningless-void-operator": "error",
    "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": false
      }
    ],
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "ignoreRestSiblings": true
      }
    ],
    "@typescript-eslint/no-use-before-define": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-literal-enum-member": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-reduce-type-parameter": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    "@typescript-eslint/prefer-ts-expect-error": "error",
    "@typescript-eslint/require-await": "off",
    "@typescript-eslint/strict-boolean-expressions": "error",
    "@typescript-eslint/no-unsafe-argument": "error",
    "react/jsx-curly-brace-presence": "error",
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "react/self-closing-comp": [
      "error",
      {
        "component": true,
        "html": true
      }
    ],
    "react/void-dom-elements-no-children": "error",
    "react/jsx-boolean-value": [
      "error",
      "always"
    ],
    "react/jsx-curly-spacing": [
      "error",
      "never"
    ],
    "react/jsx-equals-spacing": [
      "error",
      "never"
    ],
    "react/jsx-indent": [
      "error",
      2
    ],
    "react/jsx-indent-props": [
      "error",
      {
        "indentMode": 2,
        "ignoreTernaryOperator": true
      }
    ],
    "react/jsx-pascal-case": "error",
    "react/jsx-tag-spacing": [
      "error",
      {
        "closingSlash": "never", // <div/ >みたいなspaceをerrorにする。
        "beforeSelfClosing": "always", // <div />の/前にspaceを入れる。
        "afterOpening": "never" // < div/>みたいなspaceをerrorにする。
      }
    ],
    "react/jsx-wrap-multilines": [
      "error",
      {
        "declaration": true,
        "assignment": true,
        "return": true,
        "arrow": true
      }
    ],
    "react-hooks/exhaustive-deps": [
      "error"
    ],
    "jest/consistent-test-it": [
      "error",
      {
        "fn": "test"
      }
    ],
    "jest/no-alias-methods": "off",
    "jest/no-duplicate-hooks": "error",
    "jest/prefer-called-with": "error",
    "jest/prefer-expect-resolves": "error",
    "jest/prefer-hooks-in-order": "error",
    "jest/prefer-spy-on": "error",
    "jest/prefer-strict-equal": "error",
    "jest/prefer-todo": "error",
    "jest/valid-title": "error",
    "testing-library/no-render-in-setup": "off"
  }
}
